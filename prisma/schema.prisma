generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Retailer {
  id         Int      @id @default(autoincrement())
  email      String   @unique @db.VarChar(200)
  phone      String   @db.VarChar(200)
  zone       String
  acronym    String
  validated  Boolean
  merchantId Int      @map("merchant_id")
  active     Boolean
  createdBy  String   @map("created_by") @db.VarChar(100)
  createdAt  DateTime @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")
  modifiedBy String?  @db.VarChar(100)
  merchant   Merchant @relation(fields: [merchantId], references: [id])
  users      User[]

  @@map("retailers")
}

model Merchant {
  id          Int        @id @default(autoincrement())
  email       String     @unique @db.VarChar(200)
  name        String
  phone       String     @unique @db.VarChar(200)
  acronym     String?
  validated   Boolean    @default(false)
  active      Boolean
  createdBy   String     @db.VarChar(100)
  createdAt   DateTime   @updatedAt
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at")
  location    String     @db.VarChar(500)
  validatedAt DateTime?
  validatedBy String?    @db.VarChar(200)
  modifiedBy  String?    @db.VarChar(100)
  retailers   Retailer[]
  users       User[]

  @@map("merchants")
}

model User {
  id              Int         @id @default(autoincrement())
  email           String      @unique @db.VarChar(200)
  firstName       String      @map("firstname")
  lastName        String      @map("lastname")
  privileges      Privilege[]
  merchantId      Int?        @map("merchant_id")
  retailerId      Int?        @map("retailer_id")
  lastLogin       DateTime?   @map("last_login")
  active          Boolean
  createdBy       String      @map("created_by") @db.VarChar(100)
  createdAt       DateTime    @map("created_at")
  updatedAt       DateTime    @default(now()) @updatedAt @map("updated_at")
  imageUrl        String?     @map("image_url") @db.VarChar(200)
  password        String      @db.VarChar(200)
  token           String?     @db.VarChar(200)
  tokenExpiryDate DateTime?   @map("token_expiry_date")
  modifiedBy      String?     @db.VarChar(100)
  merchant        Merchant?   @relation(fields: [merchantId], references: [id])
  retailer        Retailer?   @relation(fields: [retailerId], references: [id])

  @@map("users")
}

model Order {
  id              Int            @id @default(autoincrement())
  reference       String         @unique @db.VarChar(200)
  state           OrderState
  couponId        Int?           @map("coupon_id")
  shippingAdress  String         @map("shipping_adress")
  billingAdress   String         @map("billing_adress")
  quaterId        Int            @map("quater_id")
  customerId      Int            @map("customer_id")
  accountId       Int            @map("account_id")
  paymentId       Int            @unique @map("payment_id")
  currency        String
  subTotal        Float          @map("sub_total")
  subTotalWithTax Float          @map("sub_total_with_tax")
  shippingFees    Float          @map("shipping_fees")
  active          Boolean
  createdBy       String         @map("created_by") @db.VarChar(100)
  createdAt       DateTime       @map("created_at")
  updatedAt       DateTime       @default(now()) @updatedAt @map("updated_at")
  modifiedBy      String?        @db.VarChar(100)
  orderProduct    OrderProduct[]
  coupon          Coupon?        @relation(fields: [couponId], references: [id])
  customer        Customer       @relation(fields: [customerId], references: [id])
  payment         Payment        @relation(fields: [paymentId], references: [id])
  quater          Quater         @relation(fields: [quaterId], references: [id])

  @@map("orders")
}

model Transaction {
  id         Int           @id @default(autoincrement())
  paymentId  Int           @map("payment_id")
  status     PaymentStatus
  amount     Float
  account    String
  method     String
  active     Boolean
  deleted    Boolean       @default(false)
  createdBy  String        @map("created_by") @db.VarChar(100)
  createdAt  DateTime      @map("created_at")
  updatedAt  DateTime      @default(now()) @updatedAt @map("updated_at")
  modifiedBy String?       @db.VarChar(100)
  payment    Payment       @relation(fields: [paymentId], references: [id])

  @@map("transactions")
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String
  categoryId      Int              @map("category_id")
  image           String?          @db.VarChar(200)
  active          Boolean
  deleted         Boolean          @default(false)
  createdBy       String           @map("created_by") @db.VarChar(100)
  createdAt       DateTime         @map("created_at")
  updatedAt       DateTime         @default(now()) @updatedAt @map("updated_at")
  modifiedBy      String?          @db.VarChar(100)
  orderProduct    OrderProduct[]
  productVariants ProductVariant[]
  category        Category         @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int     @map("order_id")
  productId Int     @map("product_id")
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
  @@index([orderId])
  @@map("order_products")
}

model ProductVariant {
  id          Int                @id @default(autoincrement())
  name        String
  price       Float
  productId   Int                @map("product_id")
  active      Boolean
  deleted     Boolean            @default(false)
  createdBy   String             @map("created_by") @db.VarChar(100)
  createdAt   DateTime           @map("created_at")
  updatedAt   DateTime           @default(now()) @updatedAt @map("updated_at")
  description String?            @db.VarChar(200)
  modifiedBy  String?            @db.VarChar(100)
  attributes  ProductAttribute[]
  product     Product            @relation(fields: [productId], references: [id])

  @@map("product_variants")
}

model ProductAttribute {
  id               Int            @id @default(autoincrement())
  name             String
  unit             String?        @db.VarChar(200)
  quantity         Int?
  priceDelta       Float          @default(0.0) @map("price_delta")
  productVariantId Int            @map("product_variant_id")
  active           Boolean
  deleted          Boolean        @default(false)
  createdBy        String         @map("created_by") @db.VarChar(100)
  createdAt        DateTime       @map("created_at")
  updatedAt        DateTime       @default(now()) @updatedAt @map("updated_at")
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])

  @@map("product_attributes")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?   @db.VarChar(200)
  active      Boolean
  deleted     Boolean   @default(false)
  createdBy   String    @map("created_by") @db.VarChar(100)
  createdAt   DateTime  @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  products    Product[]

  @@map("categories")
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  active    Boolean
  deleted   Boolean   @default(false)
  createdBy String    @map("created_by") @db.VarChar(100)
  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  accounts  Account[]
  orders    Order[]

  @@map("customers")
}

model Payment {
  id           Int           @id @default(autoincrement())
  accountId    Int           @map("account_id")
  status       PaymentStatus
  active       Boolean
  deleted      Boolean       @default(false)
  createdBy    String        @map("created_by") @db.VarChar(100)
  createdAt    DateTime      @map("created_at")
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at")
  order        Order?
  account      Account       @relation(fields: [accountId], references: [id])
  transactions Transaction[]

  @@map("payments")
}

model Account {
  id         Int           @id @default(autoincrement())
  phone      String        @unique @db.VarChar(200)
  customerId Int           @map("customer_id")
  methodId   Int           @map("method_id")
  active     Boolean
  deleted    Boolean       @default(false)
  createdBy  String        @map("created_by") @db.VarChar(100)
  createdAt  DateTime      @map("created_at")
  updatedAt  DateTime      @default(now()) @updatedAt @map("updated_at")
  customer   Customer      @relation(fields: [customerId], references: [id])
  method     PaymentMethod @relation(fields: [methodId], references: [id])
  payments   Payment[]

  @@map("accounts")
}

model PaymentMethod {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(200)
  regex     String    @db.VarChar(200)
  logoUrl   String    @map("logo_url")
  slug      String    @db.VarChar(200)
  active    Boolean
  deleted   Boolean   @default(false)
  createdBy String    @map("created_by") @db.VarChar(100)
  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  accounts  Account[]

  @@map("payment_methods")
}

model Coupon {
  id        Int      @id @default(autoincrement())
  code      String   @unique @db.VarChar(200)
  formula   Json
  expiredOn DateTime @map("expired_on")
  qty       Int      @default(1)
  active    Boolean
  deleted   Boolean  @default(false)
  createdBy String   @map("created_by") @db.VarChar(100)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  orders    Order[]

  @@map("coupons")
}

model Area {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(200)
  active    Boolean
  deleted   Boolean  @default(false)
  createdBy String   @map("created_by") @db.VarChar(100)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  quaters   Quater[]

  @@map("areas")
}

model Quater {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(200)
  areaId    Int      @map("area_id")
  active    Boolean
  deleted   Boolean  @default(false)
  createdBy String   @map("created_by") @db.VarChar(100)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  orders    Order[]
  area      Area     @relation(fields: [areaId], references: [id])

  @@map("quaters")
}

model ApiAuditLog {
  id        Int      @id @default(autoincrement())
  url       String
  response  Json
  request   Json
  active    Boolean
  deleted   Boolean  @default(false)
  createdBy String   @map("created_by") @db.VarChar(100)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("api_audit_logs")
}

model CrmAuditLog {
  id        Int      @id @default(autoincrement())
  email     String
  scope     String
  url       String
  response  Json
  request   Json
  active    Boolean
  deleted   Boolean  @default(false)
  createdBy String   @map("created_by") @db.VarChar(100)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("crm_audit_logs")
}

enum Privilege {
  USER_PRIVILEGE
  ADMIN_PRIVILEGE
  SUPER_PRIVILEGE
  VIEW_USERS
  EDIT_USERS
  DELETE_USERS
  CREATE_USERS
  REGISTER_MERCHANT
  EDIT_MERCHANT
  ACTIVATE_MERHCNAT
  DESACTIVATE_MERCHANT
  REGISTER_RETAILER
  EDIT_RETAILER
  ACTIVATE_RETAILER
  DESACTIVATE_RETAILER
  VIEW_MERCHANTS
  VALIDATE_MERCHANT
  VIEW_RETAILERS
}

enum OrderState {
  INITIATED
  ASSIGNED
  UNASSIGNED
  USER_CANCELLED
  CANCELLED
  REJECTED
}

enum PaymentStatus {
  SUCCESS
  FAILED
  PENDING
  CANCELLED
}

enum ProductAttributeType {
  COLOR
  VOLUME
  SIZE
  TYPE
}
